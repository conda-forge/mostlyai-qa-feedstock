schema_version: 1

context:
  name: mostlyai-qa
  version: "1.9.5"
  python_min: '3.10'

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/${{ name[0] }}/${{ name }}/mostlyai_qa-${{ version }}.tar.gz
  sha256: 679bb06af6c2906b789bb47e18e73e171c6e827f8c20b2095bac8d77b6760e81

build:
  number: 0
  noarch: python
  script: ${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation

requirements:
  host:
    - python ${{ python_min }}.*
    - hatchling
    - pip
  run:
    - python >=${{ python_min }}
    - pydantic >=2.0.0,<3.0.0
    - numpy >=1.26.3
    - scipy >=1.11.0
    - pandas >=2.0.0
    - pyarrow >=14.0.0
    - plotly >=6.0.0
    - phik >=0.12.4
    - joblib >=1.4.2
    - jinja2 >=3.1.2
    - scikit-learn >=1.4.0
    - model2vec >=0.4.1
    - transformers >=4.36.0
    - accelerate >=1.5.0
    - skops >=0.11.0
    - pytorch >=2.6.0
    - python-xxhash >=3.5.0
    - faiss-cpu >=1.7.0

tests:
  - python:
      python_version: ${{ python_min }}.*
      imports:
        - mostlyai.qa

      # As of May 2025, pip check fails because:
      # - mostlyai-qa 1.8.0 requires faiss-cpu, which is not installed.
      #   This seems to be false positive, possibly because `faiss` does not ship
      #   `dist-info` files on conda-forge.
      # - lightning 2.0.4 has requirement packaging<25.0,>=17.1, but you have packaging 25.0.
      #   This appears to be a problem with older builds of `lightning` on conda-forge,
      #   where dependencies were not pinned correctly. It's not clear why the solver
      #   decides to install these old builds rather than the newer ones (>2.10), where
      #   this problem is fixed. Experiment shows that the mostlyai-qa build is fine
      #   also using newer lightning builds.
      pip_check: false

about:
  summary: Synthetic Data Quality Assurance
  license: Apache-2.0
  license_file: LICENSE
  homepage: https://github.com/mostly-ai/mostlyai-qa

extra:
  recipe-maintainers:
    - AndreasAlbertQC
